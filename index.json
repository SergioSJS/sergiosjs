[{"categories":null,"contents":"This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.    ","permalink":"https://sergiosjs.github.io/publications/alldaydevops/","tags":["DevOps","Continuous Integration","Continuous Delivery","CI/CD pipelines","agile","Culture"],"title":"Organically DevOps: Building Quality and Security into the Software Supply Chain at Liberty Mutual"},{"categories":null,"contents":"Wiki4HE is a database containing a questionnaire that was applied to teachers with topics regarding their perception of Wikipedia as a tool for other collaborators and students.\nObjective of this work:\n Basic statistics on participating teachers Analysis of different user groups for the items “Perceived Enjoyment” ENJ1 and ENJ2 Other interesting analyzes Create a model capable of predicting whether or not a teacher recommends using Wikipedia for his students  ","permalink":"https://sergiosjs.github.io/projects/creations/ds_wiki4he/","tags":["python","analysis","Machine Learning","plotly","jupyter notebook","sklearn","pandas"],"title":"wiki4HE Exploration, Machine Learning and Storytelling"},{"categories":null,"contents":"This dataset contain four data files:\n Payment (Pagamento): with list of realized payments Ticket (Passagem): purchased tickets Stretch (Trecho): The stretches of the travel Travel (Viagem): Travel itself  In this first part, a descriptive analysis of the data set Travel is performed, grouping the data by various attributes and plotting some graphs.\n","permalink":"https://sergiosjs.github.io/projects/creations/ds_travel_br_2019/","tags":["python","analysis","Machine Learning","plotly","jupyter notebook","sklearn","pandas"],"title":"Exploration of Brazilian federal travel data"},{"categories":null,"contents":"This dataset consist a 721 pokemons of the 1 to 6 Generations, including several features like stats, types, catch rate, if the pokemon is legendary and others, totaling 21 variables. With him we will try to answer the fallowing questions:\n How the amount of pokemons is distributed per generation? Is there missing data in this dataset? Is there any relationship between the type of pokemon and it\u0026rsquo;s color? Which pokemons have the highest attributes values? and lowest? Are there correlations between other attributes? Can we find clusters among pokemons? Can we create a classifying model for legendary pokemons?  ","permalink":"https://sergiosjs.github.io/projects/creations/ds_poke/","tags":["python","analysis","Machine Learning","plotly","jupyter notebook","sklearn","pandas"],"title":"Pokeanalysis and Predicting Legendaries"},{"categories":null,"contents":"Classification is a important field of study in Machine Learning area. Traditional algorithms relay on closed-set scenarios, where the label classes are known in prior. Thus, in real world we eventually deal with unknown instances of data. To treat unseen instances in a proper way, a approach called Openset classification was developed. This paper briefly surveys some of the recent works in Open-set Classification.\n","permalink":"https://sergiosjs.github.io/projects/creations/ds_openset/","tags":["python","analysis","Machine Learning","plotly","jupyter notebook","sklearn","deep-learning","open-set"],"title":"Survey: Open-set Classification"},{"categories":null,"contents":"The best deep representation level is the FC2 deep-feature, contain the most relevant features to classify. Early fusion and Late fusion can\u0026rsquo;t better than only FC2 deep feature. Lastly the Bagging approach achieved the best results of all experiments executed.\nThe domain of food is hard to classify, even for humans. This happens due to similarity between food made with the same ingredients wich belongs to different classes. Even so the deep feature FC2 showed up a good option and the Bagging technique is the best model.\n","permalink":"https://sergiosjs.github.io/projects/creations/ds_food_rep/","tags":["python","analysis","Machine Learning","plotly","jupyter notebook","sklearn","deep-learning","keras","theano"],"title":"Technical Report: Exploiting Deep-Features Diversity in Food-11 Classification"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs]\rhome = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;]\rSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n...\r\u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }}\r{{ if .Params.tags }},\r\u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}},\r\u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }},\r...\rEdit fuse.js options to Search static/js/search.js\nkeys: [\r\u0026#34;title\u0026#34;,\r\u0026#34;contents\u0026#34;,\r\u0026#34;tags\u0026#34;,\r\u0026#34;categories\u0026#34;\r]\r","permalink":"https://sergiosjs.github.io/search/","tags":null,"title":"Search Results"}]